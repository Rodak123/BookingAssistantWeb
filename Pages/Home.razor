@page "/home"
@using BookingAssistantWeb.Models
@using BookingAssistantWeb.Services
@using System.Text.Json
@using BookingAssistantWeb.Services.Api
@inject HttpClient Http
@inject IJSRuntime JS
@inject TokenService TokenService
@inject AppsettingsService AppsettingsService;
@inject NavigationManager NavigationManager;

<PageTitle>Home</PageTitle>

<h1>Moje čísla</h1>

@if (phoneNumbers is null)
{
<p>Načítám...</p>
}
else
{
<p>Count: @phoneNumbers.Count</p>
@foreach (var phone in phoneNumbers)
{
    <NavLink href="@($"/change/{phone.id}")">@phone.number</NavLink>

    <br />
}
}

<button @onclick="RedirectAddNumber">Přidat číslo</button>

@code {
    List<PhoneNumber>? phoneNumbers;

    private ApiService? apiService;

    protected override async Task OnInitializedAsync()
    {
        apiService = new(JS, AppsettingsService);
        await LoadNumberAssignments();
    }

    private async Task LoadNumberAssignments()
    {
        if (apiService == null) return;

        ApiResponse<GetUserNumberAssignmentsResponse> numberAssignmentsResponse = await apiService.FetchGetUserNumberAssignmentsEndpoint();

        if (!numberAssignmentsResponse.Success)
        {
            Console.WriteLine($"Failed to load number assignments: {numberAssignmentsResponse.ErrorMessage}, {numberAssignmentsResponse.StatusCode}");
            return;
        }

        phoneNumbers = new();
        foreach (var assignment in numberAssignmentsResponse.Data!.phoneNumbersAssignments)
        {
            GetNumberRequest getNumberRequest = new(){
                phoneNumberId = assignment.phoneNumberId
            };

            ApiResponse<GetNumberResponse> numberResponse = await apiService.FetchGetNumberEndpoint(getNumberRequest);

            if(!numberResponse.Success) {
                Console.WriteLine($"Failed to load number: {numberResponse.ErrorMessage}, {numberResponse.StatusCode}");
                return;
            }

            PhoneNumber? phoneNumber = numberResponse.Data!.phoneNumber;

            if(phoneNumber == null) {
                Console.WriteLine($"Null number");
                continue;
            }

            phoneNumbers.Add(phoneNumber);
        }
        StateHasChanged();
    }

    private void RedirectAddNumber()
    {
        var uri = new Uri(NavigationManager.Uri);
        var baseUri = uri.GetLeftPart(UriPartial.Authority);
        NavigationManager.NavigateTo($"{baseUri}/add-number");
    }
}