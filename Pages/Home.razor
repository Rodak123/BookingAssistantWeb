@page "/home"
@using BookingAssistantWeb.Models
@using BookingAssistantWeb.Services
@using System.Text.Json
@using BookingAssistantWeb.Services.Api
@inject HttpClient Http
@inject IJSRuntime JS
@inject TokenService TokenService
@inject AppsettingsService AppsettingsService;
@inject NavigationManager NavigationManager;

<PageTitle>Home</PageTitle>

<h1>Moje čísla</h1>

@if (phoneNumbers is null)
{
  <p>Načítám...</p>
}
else
{
  <p>Count: @phoneNumbers.Count</p>
  @foreach (var phone in phoneNumbers)
  {
    <NavLink href="@($"/change/{phone.id}")">@phone.number</NavLink>

    <br />
  }
}

<button @onclick="RedirectAddNumber">Přidat číslo</button>

@code {
  List<PhoneNumber>? phoneNumbers;

  private ApiService? apiService;

  protected override async Task OnInitializedAsync()
  {
    apiService = new(JS, AppsettingsService);
    await LoadNumbers();
  }

  private async Task LoadNumbers()
  {
    if (apiService == null) return;

    ApiResponse<GetUserNumbersResponse> response = await apiService.FetchGetUserNumbersEndpoint();

    if (!response.Success)
    {
      Console.WriteLine($"Failed to load numbers: {response.ErrorMessage}, {response.StatusCode}");
      return;
    }

    phoneNumbers = response.Data!.phoneNumbers;
    StateHasChanged();
  }

  private void RedirectAddNumber()
  {
    var uri = new Uri(NavigationManager.Uri);
    var baseUri = uri.GetLeftPart(UriPartial.Authority);
    NavigationManager.NavigateTo($"{baseUri}/add-number");
  }
}