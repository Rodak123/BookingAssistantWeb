@page "/stripe"
@using BookingAssistantWeb.Services
@using System.Text.Json
@using BookingAssistantWeb.Services.Api
@using BookingAssistantWeb.Services.Api.Endpoints.Stripe

@inject AppsettingsService AppsettingsService
@inject TokenService TokenService
@inject IJSRuntime JS

<PageTitle>Stripe</PageTitle>

<h1>Stripe</h1>
<button @onclick="Checkout">Checkout</button>

@code {

  private ApiService? apiService;

  protected override void OnInitialized()
  {
    apiService = new(JS, AppsettingsService);
  }

  private async Task Checkout()
  {
    await CreateCheckoutSession();
  }

  protected async Task CreateCheckoutSession()
  {
    if (apiService == null) return;

    StripeCreateChekoutSessionRequest request = new()
    {
      lookupKey = "basic_plan"
    };

    ApiResponse<StripeCreateChekoutSessionResponse> response = await
    apiService.FetchStripeCreateChekoutSessionEndpoint(request);

    if (!response.Success)
    {
      Console.WriteLine($"Failed to create checkout session: {response.ErrorMessage}, {response.StatusCode}");
      return;
    }

    Console.WriteLine(response.Data!.sessionUrl);
    await JS.InvokeVoidAsync("eval", $"window.location.href='{response.Data!.sessionUrl}';");
  }
}