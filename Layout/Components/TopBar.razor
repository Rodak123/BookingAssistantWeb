@using BookingAssistantWeb.Models
@using BookingAssistantWeb.Services
@using BookingAssistantWeb.Services.Api
@using BookingAssistantWeb.Services.Api.Endpoints
@using BookingAssistantWeb.Services.Api.Endpoints.Google

@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject TokenService TokenService
@inject AppsettingsService AppsettingsService
@inject HttpClient Http

@code {

    private ApiService? apiService;
    private User? user;

    protected override async Task OnInitializedAsync()
    {
        
        apiService = new(JS, AppsettingsService);
        
        await LoadUserInfo();
    }

    private async Task<bool> LoadUserInfo()
    {
        if (apiService == null) return false;

        ApiResponse<GetUserInfoResponse> response = await
        apiService.FetchGetUserInfoEndpoint();

        if (!response.Success)
        {
            Console.WriteLine($"Failed to load user info: {response.ErrorMessage}, {response.StatusCode}");
            return false;
        }

        user = response.Data!.user;
        StateHasChanged();

        Console.WriteLine($"User info loaded: {user?.givenName}, {user?.email}");

        if (user == null)
            return false;


        return true;
    }

     private async Task LogoutAsync()
    {
        // Clear the token in TokenService
        TokenService.Clear();

        // Call the logout endpoint to invalidate the session on the server
        var apiService = new ApiService(JS, AppsettingsService);
        var response = await apiService.FetchLogoutGoogleEndpoint();

        if (!response.Success)
        {
            Console.WriteLine($"Logout failed: {response.ErrorMessage}, {response.StatusCode}");
            return;
        }

        // Navigate to home page
        Navigation.NavigateTo("/");
    }

}

<div class="top-row px-4 d-flex justify-content-end align-items-center">
    <div class="dropdown px-2">
        <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            @user?.givenName 
            @user?.familyName
            @if (user?.picture != null)
            {
                <img src="@user?.picture" alt="User Picture" class="user-picture ms-2" height="40" width="40" />
            }
            else
            {
                <span class="oi oi-person" />
            }
        </button>
        <ul class="dropdown-menu">
            <li><button class="btn btn-link" @onclick="LogoutAsync">Log out</button></li>
        </ul>
    </div>
</div>